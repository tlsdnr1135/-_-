name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  PROJECT_NAME: chatWeb
  S3_BUCKET_NAME: wook-bucket
  CODE_DEPLOY_APP_NAME: CodeDeploy-cicd
  DEPLOYMENT_GROUP_NAME: CodeDeploy-deploygroup

jobs:
  ci:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: application.properties 생성
        # branch가 main일 때
      if: true
      run: |
          # spring의 resources 경로로 이동
          cd ./src/main/resources
          touch ./application.properties
          # GitHub-Actions에서 설정한 값을 application.properties 파일에 쓰기
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.properties

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

      # Build
    - name: Build with Gradle
      run: ./gradlew build

#      # 전송할 파일을 담을 디렉토리 생성
#    - name: Make Directory for deliver
#      run: mkdir deploy
#
#      # Jar 파일 Copy
#    - name: Copy Jar
#      run: cp ./build/libs/*.jar ./deploy/

      # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -qq -r ./$PROJECT_NAME.zip .

      # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: S3 업로드
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME

    - name: 코드 배치하기
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME.zip 
